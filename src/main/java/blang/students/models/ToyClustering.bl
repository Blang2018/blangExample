package blang.students.models

import blang.students.models.StickBreaking

model ToyClustering{

  param GlobalDataSource data
  param Plate<Integer> idx
  param Integer k ?: 35
  
  random Plated<RealVar> obs
  random Plated<IntVar> cluster 
  random RealVar alpha ?: latentReal
  random List<RealVar> b ?: latentRealList(k)
  random List<RealVar> means ?: latentRealList(k)
  
  laws {
    
    // For dp.csv
    
    alpha ~ Exponential(1.0/1.7)

    for (int i : 0 ..< k) {
      b.get(i) | alpha ~ Beta(1.0, alpha)
      means.get(i) ~ Normal(0, 900.0)
    }
    
    for (Index<Integer> i : idx.indices()) {
      cluster.get(i) | b ~ Categorical(StickBreaking.Gem(b))
      obs.get(i) | IntVar c = cluster.get(i), means ~ Normal(means.get(c), 0.1)
    }

  }
}